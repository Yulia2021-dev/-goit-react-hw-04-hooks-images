{"version":3,"sources":["components/searchbar/Searchbar.jsx","components/imageGalleryItem/ImageGalleryItem.jsx","components/imageGallery/ImageGallery.jsx","components/button/Button.jsx","fetchAPI.js","App.js","index.js"],"names":["SearchBar","onSubmit","useState","searchQuery","setSearchQuery","className","event","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","ImageGalleryItem","id","webformatURL","largeImageURL","isOpen","setIsOpen","onClick","src","alt","mainSrc","onCloseRequest","ImageGallery","result","map","item","Button","fetchAPI","query","page","a","url","fetch","response","json","App","setResult","status","setStatus","setPage","onLoadMoreClick","onFetchImages","onErrorNoImages","onErrorNoMoreImages","then","hits","length","Error","incrementPage","emptyResultErrorMessage","shortResultErrorMessage","message","useEffect","data","window","scrollBy","top","behavior","color","width","style","textAlign","position","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b90c7c7b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./searchbar.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst SearchBar = ({ onSubmit }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const handleQueryChange = (event) => {\r\n    setSearchQuery(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n      toast.error(\"Enter correct name!\");\r\n      return;\r\n    }\r\n    onSubmit(searchQuery);\r\n    setSearchQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"searchbar\">\r\n      <form className=\"searchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"searchForm-button\">\r\n          <span className=\"searchForm-button\"></span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"searchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleQueryChange}\r\n          value={searchQuery}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./imageGalleryItem.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\n\r\nconst ImageGalleryItem = ({ id, webformatURL, largeImageURL }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <li key={id} className=\"imageGalleryItem\" onClick={() => setIsOpen(true)}>\r\n        <img\r\n          src={webformatURL}\r\n          alt={`pic-${id}`}\r\n          className=\"imageGalleryItem-image\"\r\n        />\r\n      </li>\r\n      {isOpen && (\r\n        <Lightbox\r\n          mainSrc={largeImageURL}\r\n          onCloseRequest={() => setIsOpen(false)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  dataOriginal: PropTypes.string,\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  source: PropTypes.string,\r\n  description: PropTypes.string,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from \"../imageGalleryItem/ImageGalleryItem\";\r\nimport \"./imageGallery.css\";\r\n\r\nconst ImageGallery = ({ result }) => {\r\n  return (\r\n    <ul className=\"gallery\">\r\n      {result.map((item) => (\r\n        <ImageGalleryItem\r\n          key={item.id}\r\n          id={item.id}\r\n          largeImageURL={item.largeImageURL}\r\n          webformatURL={item.webformatURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './button.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className=\"button\" type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","const API_KEY = \"23670564-24f7dd7b8f7c27899fb90c8ea\";\nconst BASE_URL = \"https://pixabay.com/api\";\n\nconst fetchAPI = async (query, page) => {\n  const url = `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`;\n  const response = await fetch(url);\n  return await response.json();\n};\n\nexport default fetchAPI;\n","import { useState, useEffect } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport SearchBar from \"./components/searchbar/Searchbar\";\nimport ImageGallery from \"./components/imageGallery/ImageGallery.jsx\";\nimport Button from \"./components/button/Button.jsx\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport fetchAPI from \"./fetchAPI\";\n\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [status, setStatus] = useState(\"idle\");\n  const [page, setPage] = useState(1);\n\n  const onLoadMoreClick = async () => {\n    if (searchQuery !== \"\") {\n      setStatus(\"pending\");\n\n      onFetchImages(\n        page,\n        onErrorNoImages(searchQuery),\n        onErrorNoMoreImages(searchQuery)\n      ).then(({ hits }) => {\n        if (hits.length === 0) {\n          throw new Error(onErrorNoImages(searchQuery));\n        }\n\n        if (hits.length < 12) {\n          setResult([...result, ...hits]);\n          throw new Error(onErrorNoMoreImages(searchQuery));\n        }\n\n        setStatus(\"resolved\");\n        setResult([...result, ...hits]);\n        incrementPage();\n      });\n    }\n  };\n\n  const incrementPage = () => setPage(page + 1);\n  const resetPage = () => setPage(1);\n\n  const onFetchImages = async (\n    page,\n    emptyResultErrorMessage,\n    shortResultErrorMessage\n  ) => {\n    try {\n      return await fetchAPI(searchQuery, page);\n    } catch (error) {\n      toast.error(error.message);\n      setStatus(\"idle\");\n    }\n  };\n\n  const onErrorNoImages = (query) =>\n    `No images found for \"${query}\". Try again.`;\n  const onErrorNoMoreImages = (query) => `No more images found for \"${query}\".`;\n\n  const handleFormSubmit = (query) => {\n    setSearchQuery(query);\n    setResult([]);\n    resetPage();\n  };\n\n  const update = () => {\n    if (searchQuery !== \"\") {\n      setResult([]);\n      setStatus(\"pending\");\n\n      onFetchImages(\n        page,\n        onErrorNoImages(searchQuery),\n        onErrorNoMoreImages(searchQuery)\n      ).then((data) => {\n        try {\n          const { hits } = data;\n          if (hits.length === 0) {\n            throw new Error(onErrorNoImages(searchQuery));\n          }\n\n          if (hits.length < 12) {\n            setResult([...result, ...hits]);\n            throw new Error(onErrorNoMoreImages(searchQuery));\n          }\n\n          setStatus(\"resolved\");\n          setResult([...result, ...hits]);\n          incrementPage();\n\n          window.scrollBy({ top: 1000, behavior: \"smooth\" });\n        } catch (error) {\n          toast.error(error.message);\n          setStatus(\"idle\");\n        }\n      });\n    }\n  };\n\n  useEffect(() => update(), [searchQuery]);\n\n  return (\n    <>\n      <SearchBar onSubmit={handleFormSubmit} />\n      <ImageGallery result={result} />\n      {status === \"resolved\" && <Button onClick={onLoadMoreClick} />}\n      {status === \"pending\" && (\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#995471\"\n          width={100}\n          style={{ textAlign: \"center\" }}\n        />\n      )}\n      <ToastContainer position=\"top-right\" autoClose={3000} />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}