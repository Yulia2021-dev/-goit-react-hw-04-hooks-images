{"version":3,"sources":["components/searchbar/Searchbar.jsx","components/imageGalleryItem/ImageGalleryItem.jsx","components/imageGallery/ImageGallery.jsx","components/button/Button.jsx","servises/fetchAPI.js","App.js","index.js"],"names":["SearchBar","state","searchQuery","handleQueryChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","onSubmit","props","trim","toast","error","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","isOpen","id","webformatURL","largeImageURL","onClick","src","alt","mainSrc","onCloseRequest","ImageGallery","result","map","item","Button","fetchAPI","query","page","a","url","fetch","response","json","App","status","showModal","largeImage","onLoadMoreClick","onFetchImages","onErrorNoMoreImages","pageQuery","emptyResultErrorMessage","shortResultErrorMessage","hits","length","Error","prevState","window","scrollBy","top","behavior","message","handleFormSubmit","toggleModal","prevProps","onErrorNoImages","color","width","style","textAlign","position","autoClose","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98f1c086.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './searchbar.css'\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n\r\n class SearchBar extends Component {\r\n  state = {\r\n     searchQuery: ''\r\n  };\r\n\r\n   handleQueryChange = event => {\r\n     this.setState({ searchQuery: event.currentTarget.value.toLowerCase() })\r\n   };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchQuery } = this.state;\r\n    const { onSubmit } = this.props;\r\n\r\n    if (searchQuery.trim() === '') {\r\n        toast.error(\"Enter correct name!\")\r\n      return;\r\n}\r\n    onSubmit(searchQuery);\r\n    this.setState({ searchQuery: '' });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"searchbar\">\r\n        <form className=\"searchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"searchForm-button\">\r\n            <span className=\"searchForm-button\"></span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"searchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleQueryChange}\r\n            value={this.state.searchQuery}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n};\r\n\r\n   SearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\n\r\nimport './imageGalleryItem.css'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nclass ImageGalleryItem extends Component {\r\n  state = { isOpen: false };\r\n  render() {\r\n    const { id, webformatURL, largeImageURL } = this.props;\r\n    const { isOpen } = this.state;\r\n    return (\r\n      <>\r\n        <li key={id} className=\"imageGalleryItem\"\r\n          onClick={() => this.setState({ isOpen: true })}>\r\n          <img\r\n            src={webformatURL}\r\n            alt={`pic-${id}`}\r\n            className=\"imageGalleryItem-image\"\r\n          />\r\n        </li>\r\n        {isOpen && (\r\n         <Lightbox\r\n            mainSrc={largeImageURL}\r\n            onCloseRequest={() => this.setState({ isOpen: false })}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  dataOriginal: PropTypes.string,\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  source: PropTypes.string,\r\n  description: PropTypes.string,\r\n};\r\n\r\nexport { ImageGalleryItem };\r\n","import { ImageGalleryItem }   from '../imageGalleryItem/ImageGalleryItem';\r\nimport './imageGallery.css';\r\n\r\nconst ImageGallery = ({ result }) => {\r\n  return (\r\n    <ul className=\"gallery\">\r\n      {result.map(item => (\r\n        <ImageGalleryItem\r\n          key={item.id}\r\n          id={item.id}\r\n          largeImageURL={item.largeImageURL}\r\n          webformatURL={item.webformatURL}\r\n        />\r\n      ))\r\n      }\r\n    </ul>\r\n  );\r\n \r\n};\r\n\r\nexport default ImageGallery;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './button.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className=\"button\" type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","const API_KEY = \"23670564-24f7dd7b8f7c27899fb90c8ea\";\n\nconst BASE_URL = \"https://pixabay.com/api\";\n\nconst fetchAPI = async (query, page) => {\n  const url = `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`;\n  const response = await fetch(url);\n  return await response.json();\n};\n\nexport default fetchAPI;\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport Loader from \"react-loader-spinner\";\nimport SearchBar from \"./components/searchbar/Searchbar\";\nimport ImageGallery from \"./components/imageGallery/ImageGallery.jsx\";\nimport Button from \"./components/button/Button.jsx\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport fetchAPI from \"./servises/fetchAPI\";\n\nclass App extends Component {\n  state = {\n    searchQuery: \"\",\n    page: 1,\n    status: \"idle\",\n    result: [],\n    showModal: false,\n    largeImage: null,\n    error: null,\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { searchQuery } = this.state;\n\n    if (searchQuery !== prevState.searchQuery) {\n      this.setState({\n        result: [],\n        status: \"pending\",\n      });\n\n      this.onFetchImages(\n        1,\n        this.onErrorNoImages(searchQuery),\n        this.onErrorNoMoreImages(searchQuery)\n      );\n    }\n  }\n\n  onLoadMoreClick = async () => {\n    const { page, searchQuery } = this.state;\n    this.setState({\n      status: \"pending\",\n    });\n\n    this.onFetchImages(\n      page,\n      this.onErrorNoMoreImages(searchQuery),\n      this.onErrorNoMoreImages(searchQuery)\n    );\n  };\n\n  onFetchImages = async (\n    pageQuery,\n    emptyResultErrorMessage,\n    shortResultErrorMessage\n  ) => {\n    const { searchQuery } = this.state;\n\n    try {\n      const { hits } = await fetchAPI(searchQuery, pageQuery);\n\n      if (hits.length === 0) {\n        throw new Error(emptyResultErrorMessage);\n      }\n\n      if (hits.length < 12) {\n        this.setState((prevState) => ({\n          result: [...prevState.result, ...hits],\n        }));\n        throw new Error(shortResultErrorMessage);\n      }\n\n      this.setState((prevState) => ({\n        status: \"resolved\",\n        result: [...prevState.result, ...hits],\n        page: pageQuery + 1,\n      }));\n      window.scrollBy({ top: 1000, behavior: \"smooth\" });\n    } catch (error) {\n      toast.error(error.message);\n      this.setState({ status: \"idle\" });\n    }\n  };\n\n  onErrorNoImages(query) {\n    return `No images found for \"${query}\". Try again.`;\n  }\n  onErrorNoMoreImages(query) {\n    return `No more images found for \"${query}\".`;\n  }\n\n  handleFormSubmit = (searchQuery) => {\n    this.setState({ searchQuery });\n  };\n\n  toggleModal = (largeImage) => {\n    this.setState((prevState) => ({\n      largeImage,\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  render() {\n    const { result, status } = this.state;\n    return (\n      <>\n        <SearchBar onSubmit={this.handleFormSubmit} />\n        <ImageGallery result={result} />\n        {status === \"resolved\" && <Button onClick={this.onLoadMoreClick} />}\n        {status === \"pending\" && (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#995471\"\n            width={100}\n            style={{ textAlign: \"center\" }}\n          />\n        )}\n        {/* {showModal && (\n          <Modal largeImage={largeImage} onClick={this.toggleModal} />\n        )} */}\n        <ToastContainer position=\"top-right\" autoClose={3000} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}